/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

buildscript {
  repositories {
    gradlePluginPortal()
  }
}

plugins {
  // Apply the java-library plugin for API and implementation separation.
  id 'java-library'
  id 'antlr'
  id 'maven-publish'
  id 'signing'
  id 'org.danilopianini.publish-on-central' version '0.7.5' // a newer version 2.0.6 exists but it's annoying to use
  id 'jacoco'
  id 'com.adarshr.test-logger' version '3.2.0'
  id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = 'io.github.douira'
version = '1.0.1'

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

def antlrVersion = '4.10.1'
def jabelVersion = '0.4.2'

dependencies {
  antlr group: 'org.antlr', name: 'antlr4', version: antlrVersion
  api group: 'org.antlr', name: 'antlr4-runtime', version: antlrVersion

  testImplementation group: 'io.github.origin-energy', name:'java-snapshot-testing-junit5', version: '3.2.+'
  testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha5'
  testImplementation group: 'org.fusesource.jansi', name:'jansi', version:'2.4.0'

  annotationProcessor group: 'com.github.bsideup.jabel', name:'jabel-javac-plugin', version: jabelVersion
  compileOnly group: 'com.github.bsideup.jabel', name:'jabel-javac-plugin', version: jabelVersion
}

shadowJar {
  archiveBaseName.set('shadow')
  archiveClassifier.set('')
  archiveVersion.set('')

  relocate 'org', 'physics.org'
  relocate 'com', 'physics.com'
}

generateGrammarSource {
  maxHeapSize = '128m'
  arguments += ['-package', 'io.github.douira.glsl_transformer_physics', '-visitor']
  outputDirectory = new File(buildDir.toString() + '/generated-src/antlr/main/io/github/douira/glsl_transformer_physics/')
}
compileJava.dependsOn generateGrammarSource
sourcesJar.dependsOn generateGrammarSource

configure([tasks.compileJava]) {
  sourceCompatibility = 16 // for the IDE support
  options.release = 8

  javaCompiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(16)
  }
}

clean {
  delete 'generated-src'
}

publishOnCentral {
  configureMavenCentral.set(true)
  projectDescription.set('GLSL Parsing, Program Transformation and Printing with ANTLR4')
  projectLongName.set('glsl-transformer')
  projectUrl.set('https://github.com/IrisShaders/glsl-transformer')
  scmConnection.set('git@github.com:IrisShaders/glsl-transformer.git')
  licenseName.set('GNU Lesser General Public License v3.0')
  licenseUrl.set('https://www.gnu.org/licenses/lgpl-3.0.en.html')
}

publishing {
  publications {
    javaMaven(MavenPublication) {
      pom {
        developers {
          developer {
            name.set('douira')
            email.set('douira100@gmail.com')
            url.set('https://douira.github.io')
          }
        }
      }
    }
  }
}

javadoc {
  configure(options) {
    tags(
      'implSpec:a:Implementation Requirements:',
      'implNote:a:Implementation Note:',
      'apiNote:a:API Usage Note:'
    )
    links "https://javadoc.io/doc/org.antlr/antlr4-runtime/$antlrVersion/"
    links "https://javadoc.io/doc/com.github.bsideup.jabel/jabel-javac-plugin/$jabelVersion/"
  }
  exclude '**/GLSLParser*.java'
  exclude '**/GLSLLexer*.java'
  exclude '**/ast/Type.java'
}
